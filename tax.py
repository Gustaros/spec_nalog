import streamlit as st
import pandas as pd
from tax_const import *


st.title("–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–ª–æ–≥–æ–≤—ã–µ —Ä–µ–∂–∏–º—ã")

st.header("–û–∂–∏–¥–∞–µ–º—ã–π –¥–æ—Ö–æ–¥")
income_col, option_col = st.columns(2)
with income_col:
    income = st.number_input("–≤–≤–µ–¥–∏—Ç–µ –æ–∂–∏–¥–∞–µ–º—ã–π –≥–æ–¥–æ–≤–æ–π –¥–æ—Ö–æ–¥", min_value=0, value=0)
with option_col:
    option = st.selectbox(
        "",
        ("‚ÇΩ", "–ö ‚ÇΩ", "–ú–õ–ù ‚ÇΩ")
    )
if option == "–ö ‚ÇΩ":
    income = income * 1000
if option == "–ú–õ–ù ‚ÇΩ":
    income = income * 1000000

workers = st.number_input("–∫–æ–ª-–≤–æ –Ω–∞–µ–º–Ω—ã—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤", min_value=0, value=0)

days = 365

def add_lines(text):
    lines = text.split(';')
    result = ""
    for line in lines:
        result += f"""{line}\n"""
    return result


def calculate_tax(income, regime):
    if regime != "–ü–°–ù":
        tax = income * tax_rates[regime]
    else:
        tax = 1229.067 * workers + 176.66 * days
    return tax

accessed_regimes = []
def access_regime(income, regime):
    if income <= income_ranges[regime][1] and workers <= workers_ranges[regime][1]:
        access = st.success(f"–í–∞—à –Ω–∞–ª–æ–≥: {calculate_tax(income, regime)}", icon="‚úÖ")
        accessed_regimes.append(regime)
    else:
        access = st.error('–†–µ–∂–∏–º –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω', icon="üö®")
    return access


def regimes_analysis(income, regime):
    access_regime(income, regime)

    with st.popover("–æ–ø–∏—Å–∞–Ω–∏–µ"):
        st.markdown(regime_descriptions[regime])
    
    with st.popover("–ª–∏–º–∏—Ç—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è"):
        st.markdown(add_lines(regime_limits[regime]))




regime_columns = st.columns(4)
for i, regime in enumerate(regimes):
    with regime_columns[i]:
        st.header(regime)
        regimes_analysis(income, regime)


df = pd.DataFrame(
    {"–†–µ–∂–∏–º": accessed_regimes, "–ù–∞–ª–æ–≥ –Ω–∞ –¥–æ—Ö–æ–¥": [calculate_tax(income, r) for r in accessed_regimes]}
)

st.header("–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞–ª–æ–≥–æ–≤")
st.bar_chart(df, x="–†–µ–∂–∏–º", y="–ù–∞–ª–æ–≥ –Ω–∞ –¥–æ—Ö–æ–¥", color="–†–µ–∂–∏–º")


